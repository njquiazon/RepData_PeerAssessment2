refdata$EVTYPE[grepl("LIGHTNING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("STORM\\sSURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
#Restoring the EVTYPE as factor
refdata$EVTYPE<-as.factor(refdata$EVTYPE)
refdata <- refdata %>% group_by(EVTYPE) %>% summarise(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), PROPDMG = sum(PROPDMG), CROPDMG = sum(CROPDMG))
View(refdata)
rm(rd)
rm(refdata11)
refdata <- data %>%
mutate(PROPDMGEXP =
ifelse(PROPDMGEXP == "B", 1000000000,
ifelse(PROPDMGEXP == "M", 1000000,
ifelse(PROPDMGEXP == "K", 1000, 0)))) %>%
mutate(PROPDMG = PROPDMG*PROPDMGEXP) %>%
mutate(CROPDMGEXP =
ifelse(CROPDMGEXP == "B", 1000000000,
ifelse(CROPDMGEXP == "M", 1000000,
ifelse(CROPDMGEXP == "K", 1000, 0)))) %>%
mutate(CROPDMG = CROPDMG*CROPDMGEXP) %>%
select(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)
refdata <- filter_at(refdata, vars(2:5), any_vars(. != 0))
refdata$EVTYPE <- as.character(refdata$EVTYPE)
refdata$EVTYPE[grepl("LOW\\sTIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LOW TIDE"
refdata$EVTYPE[grepl("AVALAN", refdata$EVTYPE, ignore.case = TRUE)] <- "AVALANCHE"
refdata$EVTYPE[grepl("BLIZZARD", refdata$EVTYPE, ignore.case = TRUE)] <- "BLIZZARD"
refdata$EVTYPE[grepl("FLOOD|FLD|STREAM|URBAN", refdata$EVTYPE, ignore.case = TRUE)] <- "FLOOD"
refdata$EVTYPE[grepl("COLD|WIND\\sCHILL|COOL|WINTER|WINDCHILL|HYPERTHERMIA|HYPOTHERMIA", refdata$EVTYPE, ignore.case = TRUE)] <- "COLD"
refdata$EVTYPE[grepl("FOG", refdata$EVTYPE, ignore.case = TRUE)] <- "FOG"
refdata$EVTYPE[grepl("SMOKE", refdata$EVTYPE, ignore.case = TRUE)] <- "SMOKE"
refdata$EVTYPE[grepl("DROUGHT|DOUGHT", refdata$EVTYPE, ignore.case = TRUE)] <- "DOUGHT"
refdata$EVTYPE[grepl("DUST", refdata$EVTYPE, ignore.case = TRUE)] <- "DUST"
refdata$EVTYPE[grepl("HEAT|WARM", refdata$EVTYPE, ignore.case = TRUE)] <- "HEAT"
refdata$EVTYPE[grepl("FROST|FREEZE", refdata$EVTYPE, ignore.case = TRUE)] <- "FREEZE"
refdata$EVTYPE[grepl("HAIL", refdata$EVTYPE, ignore.case = TRUE)] <- "HAIL"
refdata$EVTYPE[grepl("RAIN|WETNESS|PRECIPITATION|SWELL|SHOWER", refdata$EVTYPE, ignore.case = TRUE)] <- "RAIN"
refdata$EVTYPE[grepl("SNOW|ICE|DRIZZLE|FREEZING|GLAZE", refdata$EVTYPE, ignore.case = TRUE)] <- "SNOW"
refdata$EVTYPE[grepl("HIGH\\sTIDE|SURF|HIGH\\sWATER|HIGH\\sSEA", refdata$EVTYPE, ignore.case = TRUE)] <- "HIGH TIDE/SURF"
refdata$EVTYPE[grepl("TSTM|THUNDERSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "THUNDERSTORM_WIND"
refdata$EVTYPE[grepl("WIND|DOWNBURST|MICROBURST|GRADIENT|GUST|TURBULENCE", refdata$EVTYPE, ignore.case = TRUE)] <- "WIND"
refdata$EVTYPE[grepl("HURRICANE|TYPHOON", refdata$EVTYPE, ignore.case = TRUE)] <- "HURRICANE/TYPHOON"
refdata$EVTYPE[grepl("ICE\\sSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "ICE STORM"
refdata$EVTYPE[grepl("LIGHTNING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("STORM\\sSURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
refdata$EVTYPE[grepl("SLIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LAND/MUD/ROCK SLIDE"
#Restoring the EVTYPE as factor
refdata$EVTYPE<-as.factor(refdata$EVTYPE)
refdata <- refdata %>% group_by(EVTYPE) %>% summarise(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), PROPDMG = sum(PROPDMG), CROPDMG = sum(CROPDMG))
View(refdata)
source('~/.active-rstudio-document', echo=TRUE)
refdata <- data %>%
mutate(PROPDMGEXP =
ifelse(PROPDMGEXP == "B", 1000000000,
ifelse(PROPDMGEXP == "M", 1000000,
ifelse(PROPDMGEXP == "K", 1000, 0)))) %>%
mutate(PROPDMG = PROPDMG*PROPDMGEXP) %>%
mutate(CROPDMGEXP =
ifelse(CROPDMGEXP == "B", 1000000000,
ifelse(CROPDMGEXP == "M", 1000000,
ifelse(CROPDMGEXP == "K", 1000, 0)))) %>%
mutate(CROPDMG = CROPDMG*CROPDMGEXP) %>%
select(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)
refdata <- filter_at(refdata, vars(2:5), any_vars(. != 0))
refdata$EVTYPE <- as.character(refdata$EVTYPE)
refdata$EVTYPE[grepl("LOW\\sTIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LOW TIDE"
refdata$EVTYPE[grepl("AVALAN", refdata$EVTYPE, ignore.case = TRUE)] <- "AVALANCHE"
refdata$EVTYPE[grepl("BLIZZARD", refdata$EVTYPE, ignore.case = TRUE)] <- "BLIZZARD"
refdata$EVTYPE[grepl("FLOOD|FLD|STREAM|URBAN", refdata$EVTYPE, ignore.case = TRUE)] <- "FLOOD"
refdata$EVTYPE[grepl("COLD|WIND\\sCHILL|COOL|WINTER|WINDCHILL|HYPERTHERMIA|HYPOTHERMIA", refdata$EVTYPE, ignore.case = TRUE)] <- "COLD"
refdata$EVTYPE[grepl("FOG", refdata$EVTYPE, ignore.case = TRUE)] <- "FOG"
refdata$EVTYPE[grepl("SMOKE", refdata$EVTYPE, ignore.case = TRUE)] <- "SMOKE"
refdata$EVTYPE[grepl("DROUGHT|DOUGHT", refdata$EVTYPE, ignore.case = TRUE)] <- "DOUGHT"
refdata$EVTYPE[grepl("DUST", refdata$EVTYPE, ignore.case = TRUE)] <- "DUST"
refdata$EVTYPE[grepl("HEAT|WARM", refdata$EVTYPE, ignore.case = TRUE)] <- "HEAT"
refdata$EVTYPE[grepl("FROST|FREEZE", refdata$EVTYPE, ignore.case = TRUE)] <- "FREEZE"
refdata$EVTYPE[grepl("HAIL", refdata$EVTYPE, ignore.case = TRUE)] <- "HAIL"
refdata$EVTYPE[grepl("RAIN|WETNESS|PRECIPITATION|SWELL|SHOWER", refdata$EVTYPE, ignore.case = TRUE)] <- "RAIN"
refdata$EVTYPE[grepl("SNOW|ICE|DRIZZLE|FREEZING|GLAZE|ICY", refdata$EVTYPE, ignore.case = TRUE)] <- "SNOW"
refdata$EVTYPE[grepl("HIGH\\sTIDE|SURF|HIGH\\sWATER|HIGH\\sSEA", refdata$EVTYPE, ignore.case = TRUE)] <- "HIGH TIDE/SURF"
refdata$EVTYPE[grepl("TSTM|THUNDERSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "THUNDERSTORM_WIND"
refdata$EVTYPE[grepl("WIND|DOWNBURST|MICROBURST|GRADIENT|GUST|TURBULENCE", refdata$EVTYPE, ignore.case = TRUE)] <- "WIND"
refdata$EVTYPE[grepl("HURRICANE|TYPHOON", refdata$EVTYPE, ignore.case = TRUE)] <- "HURRICANE/TYPHOON"
refdata$EVTYPE[grepl("ICE\\sSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "ICE STORM"
refdata$EVTYPE[grepl("LIGHTNING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("STORM\\sSURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
refdata$EVTYPE[grepl("SLIDE|SLUMP", refdata$EVTYPE, ignore.case = TRUE)] <- "LAND/MUD/ROCK SLIDE"
#Restoring the EVTYPE as factor
refdata$EVTYPE<-as.factor(refdata$EVTYPE)
refdata <- refdata %>% group_by(EVTYPE) %>% summarise(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), PROPDMG = sum(PROPDMG), CROPDMG = sum(CROPDMG))
View(refdata)
refdata <- data %>%
mutate(PROPDMGEXP =
ifelse(PROPDMGEXP == "B", 1000000000,
ifelse(PROPDMGEXP == "M", 1000000,
ifelse(PROPDMGEXP == "K", 1000, 0)))) %>%
mutate(PROPDMG = PROPDMG*PROPDMGEXP) %>%
mutate(CROPDMGEXP =
ifelse(CROPDMGEXP == "B", 1000000000,
ifelse(CROPDMGEXP == "M", 1000000,
ifelse(CROPDMGEXP == "K", 1000, 0)))) %>%
mutate(CROPDMG = CROPDMG*CROPDMGEXP) %>%
select(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)
refdata <- filter_at(refdata, vars(2:5), any_vars(. != 0))
refdata$EVTYPE <- as.character(refdata$EVTYPE)
refdata$EVTYPE[grepl("LOW\\sTIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LOW TIDE"
refdata$EVTYPE[grepl("AVALAN", refdata$EVTYPE, ignore.case = TRUE)] <- "AVALANCHE"
refdata$EVTYPE[grepl("BLIZZARD", refdata$EVTYPE, ignore.case = TRUE)] <- "BLIZZARD"
refdata$EVTYPE[grepl("FLOOD|FLD|STREAM|URBAN", refdata$EVTYPE, ignore.case = TRUE)] <- "FLOOD"
refdata$EVTYPE[grepl("COLD|WIND\\sCHILL|COOL|WINTER|WINDCHILL|HYPOTHERMIA|LOW\\sTEMP", refdata$EVTYPE, ignore.case = TRUE)] <- "COLD"
refdata$EVTYPE[grepl("FOG", refdata$EVTYPE, ignore.case = TRUE)] <- "FOG"
refdata$EVTYPE[grepl("SMOKE", refdata$EVTYPE, ignore.case = TRUE)] <- "SMOKE"
refdata$EVTYPE[grepl("DROUGHT|DOUGHT", refdata$EVTYPE, ignore.case = TRUE)] <- "DOUGHT"
refdata$EVTYPE[grepl("DUST", refdata$EVTYPE, ignore.case = TRUE)] <- "DUST"
refdata$EVTYPE[grepl("HEAT|WARM|HYPERTHERMIA", refdata$EVTYPE, ignore.case = TRUE)] <- "HEAT"
refdata$EVTYPE[grepl("FROST|FREEZE", refdata$EVTYPE, ignore.case = TRUE)] <- "FREEZE"
refdata$EVTYPE[grepl("HAIL", refdata$EVTYPE, ignore.case = TRUE)] <- "HAIL"
refdata$EVTYPE[grepl("RAIN|WETNESS|PRECIPITATION|SWELL|SHOWER", refdata$EVTYPE, ignore.case = TRUE)] <- "RAIN"
refdata$EVTYPE[grepl("SNOW|ICE|DRIZZLE|FREEZING|GLAZE|ICY", refdata$EVTYPE, ignore.case = TRUE)] <- "SNOW"
refdata$EVTYPE[grepl("HIGH\\sTIDE|SURF|HIGH\\sWATER|HIGH\\sSEA", refdata$EVTYPE, ignore.case = TRUE)] <- "HIGH TIDE/SURF"
refdata$EVTYPE[grepl("TSTM|THUNDERSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "THUNDERSTORM_WIND"
refdata$EVTYPE[grepl("WIND|DOWNBURST|MICROBURST|GRADIENT|GUST|TURBULENCE", refdata$EVTYPE, ignore.case = TRUE)] <- "WIND"
refdata$EVTYPE[grepl("HURRICANE|TYPHOON", refdata$EVTYPE, ignore.case = TRUE)] <- "HURRICANE/TYPHOON"
refdata$EVTYPE[grepl("ICE\\sSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "ICE STORM"
refdata$EVTYPE[grepl("LIGHTNING|LIGNTNING|LIGHTING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("STORM\\sSURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
refdata$EVTYPE[grepl("SLIDE|SLUMP", refdata$EVTYPE, ignore.case = TRUE)] <- "LAND/MUD/ROCK SLIDE"
#Restoring the EVTYPE as factor
refdata$EVTYPE<-as.factor(refdata$EVTYPE)
refdata <- refdata %>% group_by(EVTYPE) %>% summarise(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), PROPDMG = sum(PROPDMG), CROPDMG = sum(CROPDMG))
View(refdata)
refdata <- data %>%
mutate(PROPDMGEXP =
ifelse(PROPDMGEXP == "B", 1000000000,
ifelse(PROPDMGEXP == "M", 1000000,
ifelse(PROPDMGEXP == "K", 1000, 0)))) %>%
mutate(PROPDMG = PROPDMG*PROPDMGEXP) %>%
mutate(CROPDMGEXP =
ifelse(CROPDMGEXP == "B", 1000000000,
ifelse(CROPDMGEXP == "M", 1000000,
ifelse(CROPDMGEXP == "K", 1000, 0)))) %>%
mutate(CROPDMG = CROPDMG*CROPDMGEXP) %>%
select(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)
View(refdata)
refdata <- filter_at(refdata, vars(2:5), any_vars(. != 0))
refdata$EVTYPE <- as.character(refdata$EVTYPE)
refdata$EVTYPE[grepl("LOW\\sTIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LOW TIDE"
refdata$EVTYPE[grepl("AVALAN", refdata$EVTYPE, ignore.case = TRUE)] <- "AVALANCHE"
refdata$EVTYPE[grepl("BLIZZARD", refdata$EVTYPE, ignore.case = TRUE)] <- "BLIZZARD"
refdata$EVTYPE[grepl("FLOOD|FLD|STREAM|URBAN|RISING", refdata$EVTYPE, ignore.case = TRUE)] <- "FLOOD"
refdata$EVTYPE[grepl("COLD|WIND\\sCHILL|COOL|WINTER|WINDCHILL|HYPOTHERMIA|LOW\\sTEMP", refdata$EVTYPE, ignore.case = TRUE)] <- "COLD"
refdata$EVTYPE[grepl("FOG", refdata$EVTYPE, ignore.case = TRUE)] <- "FOG"
refdata$EVTYPE[grepl("SMOKE", refdata$EVTYPE, ignore.case = TRUE)] <- "SMOKE"
refdata$EVTYPE[grepl("DROUGHT|DOUGHT", refdata$EVTYPE, ignore.case = TRUE)] <- "DOUGHT"
refdata$EVTYPE[grepl("DUST", refdata$EVTYPE, ignore.case = TRUE)] <- "DUST"
refdata$EVTYPE[grepl("HEAT|WARM|HYPERTHERMIA", refdata$EVTYPE, ignore.case = TRUE)] <- "HEAT"
refdata$EVTYPE[grepl("FROST|FREEZE", refdata$EVTYPE, ignore.case = TRUE)] <- "FREEZE"
refdata$EVTYPE[grepl("HAIL", refdata$EVTYPE, ignore.case = TRUE)] <- "HAIL"
refdata$EVTYPE[grepl("RAIN|WETNESS|PRECIPITATION|SWELL|SHOWER", refdata$EVTYPE, ignore.case = TRUE)] <- "RAIN"
refdata$EVTYPE[grepl("SNOW|ICE|DRIZZLE|FREEZING|GLAZE|ICY", refdata$EVTYPE, ignore.case = TRUE)] <- "SNOW"
refdata$EVTYPE[grepl("HIGH\\sTIDE|SURF|HIGH\\sWATER|HIGH\\sSEA", refdata$EVTYPE, ignore.case = TRUE)] <- "HIGH TIDE/SURF"
refdata$EVTYPE[grepl("TSTM|THUNDERSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "THUNDERSTORM_WIND"
refdata$EVTYPE[grepl("WIND|DOWNBURST|MICROBURST|GRADIENT|GUST|TURBULENCE", refdata$EVTYPE, ignore.case = TRUE)] <- "WIND"
refdata$EVTYPE[grepl("HURRICANE|TYPHOON", refdata$EVTYPE, ignore.case = TRUE)] <- "HURRICANE/TYPHOON"
refdata$EVTYPE[grepl("ICE\\sSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "ICE STORM"
refdata$EVTYPE[grepl("LIGHTNING|LIGNTNING|LIGHTING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("SURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("EROSION", refdata$EVTYPE, ignore.case = TRUE)] <- "COASTAL EROSION"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
refdata$EVTYPE[grepl("SLIDE|SLUMP", refdata$EVTYPE, ignore.case = TRUE)] <- "LAND/MUD/ROCK SLIDE"
refdata$EVTYPE[grepl("HEAVY\\sSEAS|WAVE", refdata$EVTYPE, ignore.case = TRUE)] <- "WAVES"
refdata$EVTYPE[grepl("WINTRY|HEAVY\\sMIX|MIXED", refdata$EVTYPE, ignore.case = TRUE)] <- "WITRY MIX"
refdata$EVTYPE[grepl("ACCIDENT|MISHAP|DROWN", refdata$EVTYPE, ignore.case = TRUE)] <- "ACCIDENTS"
refdata$EVTYPE<-as.factor(refdata$EVTYPE)
refdata <- refdata %>% group_by(EVTYPE) %>% summarise(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), PROPDMG = sum(PROPDMG), CROPDMG = sum(CROPDMG))
View(refdata)
refdata <- data %>%
mutate(PROPDMGEXP =
ifelse(PROPDMGEXP == "B", 1000000000,
ifelse(PROPDMGEXP == "M", 1000000,
ifelse(PROPDMGEXP == "K", 1000, 0)))) %>%
mutate(PROPDMG = PROPDMG*PROPDMGEXP) %>%
mutate(CROPDMGEXP =
ifelse(CROPDMGEXP == "B", 1000000000,
ifelse(CROPDMGEXP == "M", 1000000,
ifelse(CROPDMGEXP == "K", 1000, 0)))) %>%
mutate(CROPDMG = CROPDMG*CROPDMGEXP) %>%
select(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)
refdata <- filter_at(refdata, vars(2:5), any_vars(. != 0))
refdata$EVTYPE <- as.character(refdata$EVTYPE)
View(refdata)
refdata$EVTYPE[grepl("LOW\\sTIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LOW TIDE"
refdata$EVTYPE[grepl("AVALAN", refdata$EVTYPE, ignore.case = TRUE)] <- "AVALANCHE"
refdata$EVTYPE[grepl("BLIZZARD", refdata$EVTYPE, ignore.case = TRUE)] <- "BLIZZARD"
refdata$EVTYPE[grepl("FLOOD|FLD|STREAM|URBAN|RISING", refdata$EVTYPE, ignore.case = TRUE)] <- "FLOOD"
refdata$EVTYPE[grepl("COLD|WIND\\sCHILL|COOL|WINTER|WINDCHILL|HYPOTHERMIA|LOW\\sTEMP", refdata$EVTYPE, ignore.case = TRUE)] <- "COLD"
refdata$EVTYPE[grepl("FOG", refdata$EVTYPE, ignore.case = TRUE)] <- "FOG"
refdata$EVTYPE[grepl("SMOKE", refdata$EVTYPE, ignore.case = TRUE)] <- "SMOKE"
refdata$EVTYPE[grepl("DROUGHT|DOUGHT", refdata$EVTYPE, ignore.case = TRUE)] <- "DOUGHT"
refdata$EVTYPE[grepl("DUST", refdata$EVTYPE, ignore.case = TRUE)] <- "DUST"
refdata$EVTYPE[grepl("HEAT|WARM|HYPERTHERMIA", refdata$EVTYPE, ignore.case = TRUE)] <- "HEAT"
refdata$EVTYPE[grepl("FROST|FREEZE", refdata$EVTYPE, ignore.case = TRUE)] <- "FREEZE"
refdata$EVTYPE[grepl("HAIL", refdata$EVTYPE, ignore.case = TRUE)] <- "HAIL"
refdata$EVTYPE[grepl("RAIN|WETNESS|PRECIPITATION|SWELL|SHOWER", refdata$EVTYPE, ignore.case = TRUE)] <- "RAIN"
refdata$EVTYPE[grepl("SNOW|ICE|DRIZZLE|FREEZING|GLAZE|ICY", refdata$EVTYPE, ignore.case = TRUE)] <- "SNOW"
refdata$EVTYPE[grepl("HIGH\\sTIDE|SURF|HIGH\\sWATER|HIGH\\sSEA", refdata$EVTYPE, ignore.case = TRUE)] <- "HIGH TIDE/SURF"
refdata$EVTYPE[grepl("TSTM|THUNDERSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "THUNDERSTORM_WIND"
refdata$EVTYPE[grepl("WIND|DOWNBURST|MICROBURST|GRADIENT|GUST|TURBULENCE", refdata$EVTYPE, ignore.case = TRUE)] <- "WIND"
refdata$EVTYPE[grepl("HURRICANE|TYPHOON", refdata$EVTYPE, ignore.case = TRUE)] <- "HURRICANE/TYPHOON"
refdata$EVTYPE[grepl("ICE\\sSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "ICE STORM"
refdata$EVTYPE[grepl("LIGHTNING|LIGNTNING|LIGHTING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("SURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("EROSION", refdata$EVTYPE, ignore.case = TRUE)] <- "COASTAL EROSION"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
refdata$EVTYPE[grepl("SLIDE|SLUMP", refdata$EVTYPE, ignore.case = TRUE)] <- "LAND/MUD/ROCK SLIDE"
refdata$EVTYPE[grepl("HEAVY\\sSEAS|WAVE|SEAS", refdata$EVTYPE, ignore.case = TRUE)] <- "WAVES"
refdata$EVTYPE[grepl("WINTRY|HEAVY\\sMIX|MIXED", refdata$EVTYPE, ignore.case = TRUE)] <- "WITRY MIX"
refdata$EVTYPE[grepl("ACCIDENT|MISHAP|DROWN|OTHER", refdata$EVTYPE, ignore.case = TRUE)] <- "OTHERS"
refdata$EVTYPE<-as.factor(refdata$EVTYPE)
refdata <- refdata %>% group_by(EVTYPE) %>% summarise(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), PROPDMG = sum(PROPDMG), CROPDMG = sum(CROPDMG))
View(refdata)
refdata <- data %>%
mutate(PROPDMGEXP =
ifelse(PROPDMGEXP == "B", 1000000000,
ifelse(PROPDMGEXP == "M", 1000000,
ifelse(PROPDMGEXP == "K", 1000, 0)))) %>%
mutate(PROPDMG = PROPDMG*PROPDMGEXP) %>%
mutate(CROPDMGEXP =
ifelse(CROPDMGEXP == "B", 1000000000,
ifelse(CROPDMGEXP == "M", 1000000,
ifelse(CROPDMGEXP == "K", 1000, 0)))) %>%
mutate(CROPDMG = CROPDMG*CROPDMGEXP) %>%
select(EVTYPE, FATALITIES, INJURIES, PROPDMG, CROPDMG)
refdata <- filter_at(refdata, vars(2:5), any_vars(. != 0))
refdata$EVTYPE <- as.character(refdata$EVTYPE)
refdata$EVTYPE[grepl("LOW\\sTIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LOW TIDE"
refdata$EVTYPE[grepl("AVALAN", refdata$EVTYPE, ignore.case = TRUE)] <- "AVALANCHE"
refdata$EVTYPE[grepl("BLIZZARD", refdata$EVTYPE, ignore.case = TRUE)] <- "BLIZZARD"
refdata$EVTYPE[grepl("FLOOD|FLD|STREAM|URBAN|RISING", refdata$EVTYPE, ignore.case = TRUE)] <- "FLOOD"
refdata$EVTYPE[grepl("COLD|WIND\\sCHILL|COOL|WINTER|WINDCHILL|HYPOTHERMIA|LOW\\sTEMP", refdata$EVTYPE, ignore.case = TRUE)] <- "COLD"
refdata$EVTYPE[grepl("FOG", refdata$EVTYPE, ignore.case = TRUE)] <- "FOG"
refdata$EVTYPE[grepl("SMOKE", refdata$EVTYPE, ignore.case = TRUE)] <- "SMOKE"
refdata$EVTYPE[grepl("DROUGHT|DOUGHT", refdata$EVTYPE, ignore.case = TRUE)] <- "DOUGHT"
refdata$EVTYPE[grepl("DUST", refdata$EVTYPE, ignore.case = TRUE)] <- "DUST"
refdata$EVTYPE[grepl("HEAT|WARM|HYPERTHERMIA", refdata$EVTYPE, ignore.case = TRUE)] <- "HEAT"
refdata$EVTYPE[grepl("FROST|FREEZE", refdata$EVTYPE, ignore.case = TRUE)] <- "FREEZE"
refdata$EVTYPE[grepl("HAIL", refdata$EVTYPE, ignore.case = TRUE)] <- "HAIL"
refdata$EVTYPE[grepl("RAIN|WETNESS|PRECIPITATION|SWELL|SHOWER", refdata$EVTYPE, ignore.case = TRUE)] <- "RAIN"
refdata$EVTYPE[grepl("SNOW|ICE|DRIZZLE|FREEZING|GLAZE|ICY", refdata$EVTYPE, ignore.case = TRUE)] <- "SNOW"
refdata$EVTYPE[grepl("HIGH\\sTIDE|SURF|HIGH\\sWATER|HIGH\\sSEA", refdata$EVTYPE, ignore.case = TRUE)] <- "HIGH TIDE/SURF"
refdata$EVTYPE[grepl("TSTM|THUNDERSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "THUNDERSTORM_WIND"
refdata$EVTYPE[grepl("WIND|DOWNBURST|MICROBURST|GRADIENT|GUST|TURBULENCE", refdata$EVTYPE, ignore.case = TRUE)] <- "WIND"
refdata$EVTYPE[grepl("HURRICANE|TYPHOON", refdata$EVTYPE, ignore.case = TRUE)] <- "HURRICANE/TYPHOON"
refdata$EVTYPE[grepl("ICE\\sSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "ICE STORM"
refdata$EVTYPE[grepl("LIGHTNING|LIGNTNING|LIGHTING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("SURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("EROSION", refdata$EVTYPE, ignore.case = TRUE)] <- "COASTAL EROSION"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
refdata$EVTYPE[grepl("SLIDE|SLUMP", refdata$EVTYPE, ignore.case = TRUE)] <- "LAND/MUD/ROCK SLIDE"
refdata$EVTYPE[grepl("HEAVY\\sSEAS|WAVE|SEAS", refdata$EVTYPE, ignore.case = TRUE)] <- "WAVES"
refdata$EVTYPE[grepl("WINTRY|HEAVY\\sMIX|MIXED", refdata$EVTYPE, ignore.case = TRUE)] <- "WITRY MIX"
refdata$EVTYPE[grepl("ACCIDENT|MISHAP|DROWN|OTHER|\\?|APACHE", refdata$EVTYPE, ignore.case = TRUE)] <- "OTHERS"
refdata$EVTYPE[grepl("LOW\\sTIDE", refdata$EVTYPE, ignore.case = TRUE)] <- "LOW TIDE"
refdata$EVTYPE[grepl("AVALAN", refdata$EVTYPE, ignore.case = TRUE)] <- "AVALANCHE"
refdata$EVTYPE[grepl("BLIZZARD", refdata$EVTYPE, ignore.case = TRUE)] <- "BLIZZARD"
refdata$EVTYPE[grepl("FLOOD|FLD|STREAM|URBAN|RISING", refdata$EVTYPE, ignore.case = TRUE)] <- "FLOOD"
refdata$EVTYPE[grepl("COLD|WIND\\sCHILL|COOL|WINTER|WINDCHILL|HYPOTHERMIA|LOW\\sTEMP", refdata$EVTYPE, ignore.case = TRUE)] <- "COLD"
refdata$EVTYPE[grepl("FOG", refdata$EVTYPE, ignore.case = TRUE)] <- "FOG"
refdata$EVTYPE[grepl("SMOKE", refdata$EVTYPE, ignore.case = TRUE)] <- "SMOKE"
refdata$EVTYPE[grepl("DROUGHT|DOUGHT", refdata$EVTYPE, ignore.case = TRUE)] <- "DOUGHT"
refdata$EVTYPE[grepl("DUST", refdata$EVTYPE, ignore.case = TRUE)] <- "DUST"
refdata$EVTYPE[grepl("HEAT|WARM|HYPERTHERMIA", refdata$EVTYPE, ignore.case = TRUE)] <- "HEAT"
refdata$EVTYPE[grepl("FROST|FREEZE", refdata$EVTYPE, ignore.case = TRUE)] <- "FREEZE"
refdata$EVTYPE[grepl("HAIL", refdata$EVTYPE, ignore.case = TRUE)] <- "HAIL"
refdata$EVTYPE[grepl("RAIN|WETNESS|PRECIPITATION|SWELL|SHOWER", refdata$EVTYPE, ignore.case = TRUE)] <- "RAIN"
refdata$EVTYPE[grepl("SNOW|ICE|DRIZZLE|FREEZING|GLAZE|ICY", refdata$EVTYPE, ignore.case = TRUE)] <- "SNOW"
refdata$EVTYPE[grepl("HIGH\\sTIDE|SURF|HIGH\\sWATER|HIGH\\sSEA", refdata$EVTYPE, ignore.case = TRUE)] <- "HIGH TIDE/SURF"
refdata$EVTYPE[grepl("TSTM|THUNDERSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "THUNDERSTORM_WIND"
refdata$EVTYPE[grepl("WIND|DOWNBURST|MICROBURST|GRADIENT|GUST|TURBULENCE", refdata$EVTYPE, ignore.case = TRUE)] <- "WIND"
refdata$EVTYPE[grepl("HURRICANE|TYPHOON", refdata$EVTYPE, ignore.case = TRUE)] <- "HURRICANE/TYPHOON"
refdata$EVTYPE[grepl("ICE\\sSTORM", refdata$EVTYPE, ignore.case = TRUE)] <- "ICE STORM"
refdata$EVTYPE[grepl("LIGHTNING|LIGNTNING|LIGHTING", refdata$EVTYPE, ignore.case = TRUE)] <- "LIGHTNING"
refdata$EVTYPE[grepl("RIP\\sCURRENT", refdata$EVTYPE, ignore.case = TRUE)] <- "RIP CURRENT"
refdata$EVTYPE[grepl("SEICHE", refdata$EVTYPE, ignore.case = TRUE)] <- "SEICHE"
refdata$EVTYPE[grepl("SLEET", refdata$EVTYPE, ignore.case = TRUE)] <- "SLEET"
refdata$EVTYPE[grepl("SURGE", refdata$EVTYPE, ignore.case = TRUE)] <- "STORM SURGE"
refdata$EVTYPE[grepl("TORNADO|TORNDAO", refdata$EVTYPE, ignore.case = TRUE)] <- "TORNADO"
refdata$EVTYPE[grepl("EROSION", refdata$EVTYPE, ignore.case = TRUE)] <- "COASTAL EROSION"
refdata$EVTYPE[grepl("TROPICAL|STORM", refdata$EVTYPE, ignore.case = TRUE)] <- "TROPICAL STORM/DEPRESSION"
refdata$EVTYPE[grepl("TSUNAMI", refdata$EVTYPE, ignore.case = TRUE)] <- "TSUNAMI"
refdata$EVTYPE[grepl("WATERSPOUT", refdata$EVTYPE, ignore.case = TRUE)] <- "WATERSPOUT"
refdata$EVTYPE[grepl("FIRE", refdata$EVTYPE, ignore.case = TRUE)] <- "WILDFIRE"
refdata$EVTYPE[grepl("SLIDE|SLUMP", refdata$EVTYPE, ignore.case = TRUE)] <- "LAND/MUD/ROCK SLIDE"
refdata$EVTYPE[grepl("HEAVY\\sSEAS|WAVE|SEAS", refdata$EVTYPE, ignore.case = TRUE)] <- "WAVES"
refdata$EVTYPE[grepl("WINTRY|HEAVY\\sMIX|MIXED", refdata$EVTYPE, ignore.case = TRUE)] <- "WITRY MIX"
refdata$EVTYPE[grepl("ACCIDENT|MISHAP|DROWN|OTHER|\\?|APACHE", refdata$EVTYPE, ignore.case = TRUE)] <- "OTHERS"
refdata$EVTYPE<-as.factor(refdata$EVTYPE)
refdata <- refdata %>% group_by(EVTYPE) %>% summarise(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), PROPDMG = sum(PROPDMG), CROPDMG = sum(CROPDMG))
View(refdata)
health <- refdata %>%
arrange(desc, mutate(HLTH = INJURUES + FATALITIES)) %>%
mutate(CS = cumsum(HLTH)) %>%
select(EVTYPE, HTLT, CS)
health <- refdata %>%
mutate(HLTH = INJURUES + FATALITIES) %>%
arrange(desc, HLTH) %>%
mutate(CS = cumsum(HLTH)) %>%
select(EVTYPE, HTLT, CS)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc, HLTH) %>%
mutate(CS = cumsum(HLTH)) %>%
select(EVTYPE, HTLT, CS)
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
mutate(CS = cumsum(HLTH)) %>%
select(EVTYPE, HTLT, CS)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
mutate(CS = cumsum(HLTH)) %>%
select(EVTYPE, HLTH, CS)
View(health)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
mutate(CSP = cumsum(HLTH)/sum(HLTH)) %>%
select(EVTYPE, HLTH, CS)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
mutate(CSP = cumsum(HLTH)/sum(HLTH)) %>%
select(EVTYPE, HLTH, CSP)
damage <- refdata %>%
mutate(DMG = PROPDMG + CROPDMG) %>%
arrange(desc(DMG)) %>%
mutate(CSP = cumsum(DMG)/sum(DMG)) %>%
select(EVTYPE, DMG, CSP)
View(damage)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
top_10(select(EVTYPE, FATALITIES, INJURIES))
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
select(EVTYPE, FATALITIES, INJURIES) %>%
top_n(10)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
select(EVTYPE, FATALITIES, INJURIES)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
select(EVTYPE, FATALITIES, INJURIES) %>%
top_n(10)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
select(EVTYPE, FATALITIES, INJURIES, HLTH) %>%
top_n(10)
damage <- refdata %>%
mutate(DMG = PROPDMG + CROPDMG) %>%
arrange(desc(DMG)) %>%
select(EVTYPE, PROPDMG, CROPDMG, DMG)
damage <- refdata %>%
mutate(DMG = PROPDMG + CROPDMG) %>%
arrange(desc(DMG)) %>%
select(EVTYPE, PROPDMG, CROPDMG, DMG) %>%
top_n(10)
damage <- refdata %>%
mutate(DMG = PROPDMG + CROPDMG) %>%
arrange(desc(DMG)) %>%
select(EVTYPE, PROPDMG, CROPDMG) %>%
top_n(10)
damage <- refdata %>%
mutate(DMG = PROPDMG + CROPDMG) %>%
arrange(desc(DMG)) %>%
top_n(10) %>%
select(EVTYPE, PROPDMG, CROPDMG)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
top_n(10) %>%
select(EVTYPE, FATALITIES, INJURIES)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
top_n(10) %>%
select(EVTYPE, FATALITIES, INJURIES) %>%
gather(FATALITIES, INJURIES, key = "TYPE", value = "VALUE")
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
top_n(10) %>%
select(EVTYPE, FATALITIES, INJURIES) %>%
gather(key = "TYPE", value = "VALUE", FATALITIES:INJURIES)
install.packages("tidyr")
library(tidyr)
health <- refdata %>%
mutate(HLTH = INJURIES + FATALITIES) %>%
arrange(desc(HLTH)) %>%
top_n(10) %>%
select(EVTYPE, FATALITIES, INJURIES) %>%
gather(key = "TYPE", value = "VALUE", FATALITIES:INJURIES)
ggplot(health, aes(x=EVTYPE, y=VALUE,fill=TYPE))
+ geom_bar(stat="identity")
+ labs(title="Most Harmful Events to Population Health", x="Event Type", y="Count")
ggplot(health, aes(x = reorder(EVTYPE, -VALUE), y = VALUE, fill = TYPE))
+ geom_bar(stat = "identity")
+ labs(title = "Most Harmful Events to Population Health", x="Event Type", y="Count")
ggplot(health, aes(x = EVTYPE, y = VALUE, fill = TYPE)
+ geom_bar(stat = "identity")
+ labs(title = "Most Harmful Events to Population Health", x="Event Type", y="Count"))
ggplot(health, aes(x = EVTYPE, y = VALUE, fill = TYPE))
+ geom_bar(stat = "identity")
+ labs(title = "Most Harmful Events to Population Health", x="Event Type", y="Count")
ggplot(plotdata, aes(x=reorder(EVTYPE,-VALUE), y=VALUE, fill=TYPE))+geom_bar(stat="identity")+labs(title="Harmful Events to Population Health", x="Event Type", y="Count")
ggplot(health, aes(x=reorder(EVTYPE,-VALUE), y=VALUE, fill=TYPE))+geom_bar(stat="identity")+labs(title="Harmful Events to Population Health", x="Event Type", y="Count")
ggplot(health, aes(x = EVTYPE, y=VALUE, fill=TYPE))+geom_bar(stat="identity")+labs(title="Harmful Events to Population Health", x="Event Type", y="Count")
ggplot(health, aes(x = reorder(EVTYPE,-VALUE), y = VALUE, fill = TYPE)) +
geom_bar(stat = "identity") +
labs(title = "Most Harmful Events to Population Health", x="Event", y="Count")
ggplot(health, aes(x = reorder(EVTYPE,-VALUE), y = VALUE, fill = TYPE)) +
geom_bar(stat = "identity") +
coord_cartesian(ylim =c(0, 100)) +
labs(title = "Most Harmful Events to Population Health", x="Event", y="Count")
ggplot(health, aes(x = reorder(EVTYPE,-VALUE), y = VALUE, fill = TYPE)) +
geom_bar(stat = "identity") +
labs(title = "Most Harmful Events to Population Health", x="Event", y="Count")
expand_limits(x = c(0, NA), y = c(0, NA)) +
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))
ggplot(health, aes(x = reorder(EVTYPE,-VALUE), y = VALUE, fill = TYPE)) +
geom_bar(stat = "identity") +
labs(title = "Most Harmful Events to Population Health", x="Event", y="Count")
expand_limits(x = c(0, NA), y = c(0, NA)) +
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-6))
library(scales)
ggplot(health, aes(x = reorder(EVTYPE,-VALUE), y = VALUE, fill = TYPE)) +
geom_bar(stat = "identity") +
labs(title = "Most Harmful Events to Population Health", x="Event", y="Count")
expand_limits(x = c(0, NA), y = c(0, NA)) +
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-6))
ggplot(health, aes(x = reorder(EVTYPE,-VALUE), y = VALUE, fill = TYPE)) +
geom_bar(stat = "identity") +
labs(title = "Most Harmful Events to Population Health", x="Event", y="Count")
expand_limits(x = c(0, NA), y = c(0, NA)) +
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))
ggplot(health, aes(x = reorder(EVTYPE,-VALUE), y = VALUE, fill = TYPE)) +
geom_bar(stat = "identity") +
labs(title = "Most Harmful Events to Population Health", x="Event", y="Count") +
expand_limits(x = c(0, NA), y = c(0, NA)) +
scale_y_continuous(labels = unit_format(unit = "K", scale = 1e-3))
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
library(scales)
